{"ast":null,"code":"var _jsxFileName = \"/Users/TARIQ/Desktop/e_commerce/src/components/CheckoutForm/AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, InputLabel, MenuItem, Typography, Select, Button } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport FormInput from './FormInput';\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = _ref => {\n  _s();\n\n  let {\n    checkoutToken\n  } = _ref;\n  const methods = useForm();\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n  const countries = Object.entries(shippingCountries).map(_ref2 => {\n    let [code, name] = _ref2;\n    return {\n      id: code,\n      label: name\n    };\n  });\n  const subdivisions = Object.entries(shippingSubdivisions).map(_ref3 => {\n    let [code, name] = _ref3;\n    return {\n      id: code,\n      label: name\n    };\n  });\n  const options = shippingOptions.map(sO => ({\n    id: sO.id,\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`\n  }));\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async countryCode => {\n    const {\n      subdivisions\n    } = await commerce.services.localeListSubdivisions(countryCode);\n    console.log(subdivisions);\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOption = async function (checkoutToken, country) {\n    let region = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const options = await commerce.checkout.getShippingOptions(checkoutToken, {\n      country,\n      region\n    });\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.Id);\n  }, []);\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOption(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"Fisrt name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"zip\",\n            label: \"ZIP /postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingCountry,\n              fullWidth: true,\n              onChange: e => setShippingCountry(e.target.value),\n              children: countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.id,\n                children: country.label\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping SubDivision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingSubdivision,\n              fullWidth: true,\n              onChange: e => setShippingSubdivision(e.target.value),\n              children: subdivisions.map(subdivision => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: subdivision.id,\n                children: subdivision.label\n              }, subdivision.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingOption,\n              fullWidth: true,\n              onChange: e => setShippingOption(e.target.value),\n              children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.id,\n                children: option.label\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            children: \"Back to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"conti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"6edfXOAazTwP2FBoBl05qXeSlMo=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/Users/TARIQ/Desktop/e_commerce/src/components/CheckoutForm/AddressForm.jsx"],"names":["Grid","InputLabel","MenuItem","Typography","Select","Button","React","useEffect","useState","FormProvider","useForm","FormInput","commerce","AddressForm","checkoutToken","methods","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","countries","Object","entries","map","code","name","id","label","subdivisions","options","sO","description","price","formatted_with_symbol","fetchShippingCountries","checkoutTokenId","services","localeListCountries","keys","fetchSubdivisions","countryCode","localeListSubdivisions","console","log","fetchShippingOption","country","region","checkout","getShippingOptions","Id","e","target","value","subdivision","option","display","justifyContent"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,UAArC,EAAgDC,MAAhD,EAAwDC,MAAxD,QAAsE,mBAAtE;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,iBAAtC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;;;;AAEA,MAAMC,WAAW,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AACvC,QAAMC,OAAO,GAAGL,OAAO,EAAvB;AACA,QAAM,CAACM,iBAAD,EAAmBC,oBAAnB,IAA2CT,QAAQ,CAAC,EAAD,CAAzD;AACA,QAAM,CAACU,eAAD,EAAiBC,kBAAjB,IAAuCX,QAAQ,CAAC,EAAD,CAArD;AACA,QAAM,CAACY,oBAAD,EAAsBC,uBAAtB,IAAiDb,QAAQ,CAAC,EAAD,CAA/D;AACA,QAAM,CAACc,mBAAD,EAAqBC,sBAArB,IAA+Cf,QAAQ,CAAC,EAAD,CAA7D;AACA,QAAM,CAACgB,eAAD,EAAiBC,kBAAjB,IAAuCjB,QAAQ,CAAC,EAAD,CAArD;AACA,QAAM,CAACkB,cAAD,EAAgBC,iBAAhB,IAAqCnB,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMoB,SAAS,GAAGC,MAAM,CAACC,OAAP,CAAed,iBAAf,EAAkCe,GAAlC,CAAsC;AAAA,QAAC,CAACC,IAAD,EAAMC,IAAN,CAAD;AAAA,WAAkB;AAACC,MAAAA,EAAE,EAACF,IAAJ;AAASG,MAAAA,KAAK,EAACF;AAAf,KAAlB;AAAA,GAAtC,CAAlB;AACA,QAAMG,YAAY,GAAGP,MAAM,CAACC,OAAP,CAAeV,oBAAf,EAAqCW,GAArC,CAAyC;AAAA,QAAC,CAACC,IAAD,EAAMC,IAAN,CAAD;AAAA,WAAkB;AAACC,MAAAA,EAAE,EAACF,IAAJ;AAASG,MAAAA,KAAK,EAACF;AAAf,KAAlB;AAAA,GAAzC,CAArB;AACA,QAAMI,OAAO,GAAGb,eAAe,CAACO,GAAhB,CAAqBO,EAAD,KAAO;AAAEJ,IAAAA,EAAE,EAAEI,EAAE,CAACJ,EAAT;AAAaC,IAAAA,KAAK,EAAE,GAAEG,EAAE,CAACC,WAAY,OAAMD,EAAE,CAACE,KAAH,CAASC,qBAAsB;AAA1E,GAAP,CAApB,CAAhB;;AAEA,QAAMC,sBAAsB,GAAG,MAAOC,eAAP,IAAyB;AACpD,UAAM;AAAEf,MAAAA;AAAF,QAAgB,MAAMhB,QAAQ,CAACgC,QAAT,CAAkBC,mBAAlB,CAAsCF,eAAtC,CAA5B;AACA1B,IAAAA,oBAAoB,CAACW,SAAD,CAApB;AACAT,IAAAA,kBAAkB,CAACU,MAAM,CAACiB,IAAP,CAAYlB,SAAZ,EAAuB,CAAvB,CAAD,CAAlB;AACH,GAJD;;AAKA,QAAMmB,iBAAiB,GAAG,MAAOC,WAAP,IAAqB;AAC3C,UAAM;AAAEZ,MAAAA;AAAF,QAAmB,MAAMxB,QAAQ,CAACgC,QAAT,CAAkBK,sBAAlB,CAAyCD,WAAzC,CAA/B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;AACAf,IAAAA,uBAAuB,CAACe,YAAD,CAAvB;AACAb,IAAAA,sBAAsB,CAACM,MAAM,CAACiB,IAAP,CAAYV,YAAZ,EAA0B,CAA1B,CAAD,CAAtB;AACH,GALD;;AAOA,QAAMgB,mBAAmB,GAAG,gBAAOtC,aAAP,EAAqBuC,OAArB,EAA6C;AAAA,QAAhBC,MAAgB,uEAAP,IAAO;AACrE,UAAMjB,OAAO,GAAG,MAAMzB,QAAQ,CAAC2C,QAAT,CAAkBC,kBAAlB,CAAqC1C,aAArC,EAAmD;AAACuC,MAAAA,OAAD;AAASC,MAAAA;AAAT,KAAnD,CAAtB;AAEA7B,IAAAA,kBAAkB,CAACY,OAAD,CAAlB;AACAV,IAAAA,iBAAiB,CAACU,OAAO,CAAC,CAAD,CAAP,CAAWH,EAAZ,CAAjB;AACH,GALD;;AAOC3B,EAAAA,SAAS,CAAC,MAAI;AACXmC,IAAAA,sBAAsB,CAAC5B,aAAa,CAAC2C,EAAf,CAAtB;AACF,GAFQ,EAEP,EAFO,CAAT;AAIAlD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGW,eAAH,EAAoB6B,iBAAiB,CAAC7B,eAAD,CAAjB;AACvB,GAFQ,EAEP,CAACA,eAAD,CAFO,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGe,mBAAH,EAAwB8B,mBAAmB,CAACtC,aAAa,CAACoB,EAAf,EAAkBhB,eAAlB,EAAkCI,mBAAlC,CAAnB;AAC3B,GAFQ,EAEP,CAACA,mBAAD,CAFO,CAAT;AAKH,sBACM;AAAA,4BACG,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,YAAD,OAAkBP,OAAlB;AAAA,6BACK;AAAM,QAAA,QAAQ,EAAC,EAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,QAAQ,MAAnB;AAAoB,YAAA,IAAI,EAAC,WAAzB;AAAqC,YAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAW,YAAA,QAAQ,MAAnB;AAAoB,YAAA,IAAI,EAAC,UAAzB;AAAoC,YAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,SAAD;AAAW,YAAA,QAAQ,MAAnB;AAAoB,YAAA,IAAI,EAAC,UAAzB;AAAoC,YAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,SAAD;AAAW,YAAA,QAAQ,MAAnB;AAAoB,YAAA,IAAI,EAAC,OAAzB;AAAiC,YAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,SAAD;AAAW,YAAA,QAAQ,MAAnB;AAAoB,YAAA,IAAI,EAAC,MAAzB;AAAgC,YAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,SAAD;AAAW,YAAA,QAAQ,MAAnB;AAAoB,YAAA,IAAI,EAAC,KAAzB;AAA+B,YAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,EAAV;AAAc,YAAA,EAAE,EAAE,CAAlB;AAAA,oCACM,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADN,eAEM,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAEG,eAAf;AAAgC,cAAA,SAAS,MAAzC;AAA0C,cAAA,QAAQ,EAAGwC,CAAD,IAAMvC,kBAAkB,CAACuC,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5E;AAAA,wBACKhC,SAAS,CAACG,GAAV,CAAesB,OAAD,iBACb,QAAC,QAAD;AAA2B,gBAAA,KAAK,EAAEA,OAAO,CAACnB,EAA1C;AAAA,0BACKmB,OAAO,CAAClB;AADb,iBAAekB,OAAO,CAACnB,EAAvB;AAAA;AAAA;AAAA;AAAA,sBADD;AADL;AAAA;AAAA;AAAA;AAAA,oBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAkBI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,EAAV;AAAc,YAAA,EAAE,EAAE,CAAlB;AAAA,oCACM,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADN,eAEM,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAEZ,mBAAf;AAAoC,cAAA,SAAS,MAA7C;AAA8C,cAAA,QAAQ,EAAGoC,CAAD,IAAMnC,sBAAsB,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV,CAApF;AAAA,wBACGxB,YAAY,CAACL,GAAb,CAAkB8B,WAAD,iBACd,QAAC,QAAD;AAA+B,gBAAA,KAAK,EAAEA,WAAW,CAAC3B,EAAlD;AAAA,0BACK2B,WAAW,CAAC1B;AADjB,iBAAe0B,WAAW,CAAC3B,EAA3B;AAAA;AAAA;AAAA;AAAA,sBADH;AADH;AAAA;AAAA;AAAA;AAAA,oBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eA4BI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,EAAV;AAAc,YAAA,EAAE,EAAE,CAAlB;AAAA,oCACM,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADN,eAEM,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAER,cAAf;AAA+B,cAAA,SAAS,MAAxC;AAAyC,cAAA,QAAQ,EAAGgC,CAAD,IAAK/B,iBAAiB,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzE;AAAA,wBACGvB,OAAO,CAACN,GAAR,CAAa+B,MAAD,iBACL,QAAC,QAAD;AAA0B,gBAAA,KAAK,EAAEA,MAAM,CAAC5B,EAAxC;AAAA,0BACK4B,MAAM,CAAC3B;AADZ,iBAAe2B,MAAM,CAAC5B,EAAtB;AAAA;AAAA;AAAA;AAAA,sBADP;AADH;AAAA;AAAA;AAAA;AAAA,oBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAwCI;AAAA;AAAA;AAAA;AAAA,gBAxCJ,eAyCI;AAAK,UAAA,KAAK,EAAE;AAAC6B,YAAAA,OAAO,EAAC,MAAT;AAAgBC,YAAAA,cAAc,EAAC;AAA/B,WAAZ;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA,kBADN;AAqDD,CAlGD;;GAAMnD,W;UACcH,O;;;KADdG,W;AAoGN,eAAeA,WAAf","sourcesContent":["import { Grid, InputLabel, MenuItem, Typography,Select, Button } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport FormInput from './FormInput';\n\nimport { commerce } from '../../lib/commerce';\n\nconst AddressForm = ({ checkoutToken }) => {\n    const methods = useForm();\n    const [shippingCountries,setShippingCountries] = useState([]);\n    const [shippingCountry,setShippingCountry] = useState(\"\");\n    const [shippingSubdivisions,setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision,setShippingSubdivision] = useState(\"\");\n    const [shippingOptions,setShippingOptions] = useState([]);\n    const [shippingOption,setShippingOption] = useState(\"\");\n\n    const countries = Object.entries(shippingCountries).map(([code,name]) => ({id:code,label:name}));\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code,name]) => ({id:code,label:name}));\n    const options = shippingOptions.map((sO)=>({ id: sO.id, label:`${sO.description} - (${sO.price.formatted_with_symbol})`}));\n\n    const fetchShippingCountries = async (checkoutTokenId)=>{\n        const { countries } = await commerce.services.localeListCountries(checkoutTokenId);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n    const fetchSubdivisions = async (countryCode)=>{\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n        console.log(subdivisions);\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    }\n\n    const fetchShippingOption = async (checkoutToken,country,region = null)=>{\n        const options = await commerce.checkout.getShippingOptions(checkoutToken,{country,region});\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    }\n\n     useEffect(()=>{\n        fetchShippingCountries(checkoutToken.Id);\n     },[])\n\n     useEffect(()=>{\n         if(shippingCountry) fetchSubdivisions(shippingCountry);\n     },[shippingCountry])\n\n     useEffect(()=>{\n         if(shippingSubdivision) fetchShippingOption(checkoutToken.id,shippingCountry,shippingSubdivision);\n     },[shippingSubdivision])\n\n\n  return (\n        <>\n           <Typography variant='h6' gutterBottom>Shipping Address</Typography>\n           <FormProvider {...methods} >\n                <form onSubmit=\"\">\n                    <Grid container spacing={3}>\n                        <FormInput required name=\"firstName\" label=\"Fisrt name\"/>\n                        <FormInput required name=\"lastName\" label=\"Last name\"/>\n                        <FormInput required name=\"address1\" label=\"Address\"/>\n                        <FormInput required name=\"email\" label=\"Email\"/>\n                        <FormInput required name=\"city\" label=\"City\"/>\n                        <FormInput required name=\"zip\" label=\"ZIP /postal code\"/>\n                        <Grid xs={12} sm={6}>\n                              <InputLabel>Shipping Country</InputLabel>  \n                              <Select value={shippingCountry} fullWidth onChange={(e)=> setShippingCountry(e.target.value)}>\n                                  {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}  >\n                                        {country.label}\n                                    </MenuItem>\n                                  ))}\n                                  \n                              </Select>\n                        </Grid>\n                        <Grid xs={12} sm={6}>\n                              <InputLabel>Shipping SubDivision</InputLabel>  \n                              <Select value={shippingSubdivision} fullWidth onChange={(e)=> setShippingSubdivision(e.target.value)}>\n                                {subdivisions.map((subdivision)=>(\n                                    <MenuItem key={subdivision.id} value={subdivision.id}  >\n                                        {subdivision.label}\n                                  </MenuItem>\n                                ))}\n                              </Select>\n                        </Grid>\n                        <Grid xs={12} sm={6}>\n                              <InputLabel>Shipping Options</InputLabel>  \n                              <Select value={shippingOption} fullWidth onChange={(e)=>setShippingOption(e.target.value)}>\n                                {options.map((option)=>(\n                                        <MenuItem key={option.id} value={option.id}  >\n                                            {option.label}\n                                        </MenuItem>\n                                ))}\n                              </Select>\n                        </Grid>\n                    </Grid>\n                    <br/>\n                    <div style={{display:'flex',justifyContent:'space-between'}}>\n                        <Button variant='outlined'>Back to cart</Button>\n                        <Button variant='conti'></Button>\n                    </div>\n                </form>\n           </FormProvider>\n        </>\n  )\n};\n\nexport default AddressForm;\n"]},"metadata":{},"sourceType":"module"}