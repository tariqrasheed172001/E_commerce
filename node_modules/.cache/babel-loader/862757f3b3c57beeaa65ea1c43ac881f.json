{"ast":null,"code":"// import { Avatar, Container, Grid, Paper, Button, Typography } from '@material-ui/core';\n// import  LockOutlinedIcon  from '@material-ui/icons/LockOutlined';\n// import React, { useState } from 'react';\n// import Input from './Input';\n// import { GoogleLogin } from 'react-google-login';\n// import Icon from './Icon';\n// import { useDispatch } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n// import useStyles from \"./styles\";\n// const Auth = () => {\n//     const classes = useStyles();\n//     const [isSignUp,setIsSignUp] = useState(false);\n//     const [showPassword, setShowPassword] = useState(false);\n//     const dispatch = useDispatch();\n//     const [formData,setFormData] = useState({\n//         firtname:'',\n//         lastname:'',\n//         email:'',\n//         password:'',\n//         confirmPassword:'',\n//     });\n//     const history = useNavigate();\n//     const handleSubmit = (event)=>{\n//         event.preventDefault();\n//     }\n//     const handleChange = (event)=>{\n//         setFormData({ ...formData, [event.target.name]: event.target.value })\n//     }\n//     const handleShowPassword = ()=> setShowPassword((prevShowPassword) => !prevShowPassword);\n//     const switchMode = () =>{\n//         setIsSignUp((prevIsSignUp)=>!prevIsSignUp);\n//         handleShowPassword(false);\n//     }\n//     const googleSuccess = async (res) =>{\n//         const result = res?.profileObj; // cannot get property profileObj of undefined\n//         const token = res?.tokenId;\n//         try {\n//             dispatch({type:'AUTH', data:{result,token}});\n//             history('/');\n//         } catch (error) {\n//             console.log(error);\n//         }\n//     }\n//     const googleFailure = (error) =>{\n//         console.log(error);\n//         console.log('Google sign In was unsuccessgful. Try again later');\n//     }\n//   return (\n//     <Container component=\"main\" maxWidht=\"xs\">\n//         <Paper className={classes.Paper} elevation={3}>\n//             <Avatar className={classes.Avatar}>\n//                 <LockOutlinedIcon color='secondary' />\n//             </Avatar>\n//             <Typography variant='h5'>{isSignUp?'Sign Up':'Sign In'}</Typography>\n//             <form className={classes.form} onSubmit={handleSubmit}>\n//                 <Grid container spacing={2} >\n//                     {isSignUp && (\n//                         <>\n//                             <Input name=\"firstname\" label=\"First Name\" autoFocus handleChange={handleChange} half />\n//                             <Input name=\"lastname\" label=\"Last Name\" handleChange={handleChange} half />\n//                         </>\n//                     )}\n//                     <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n//                     <Input name=\"password\" label=\"password\" handleChange={handleChange} type={showPassword?\"text\":\"password\"} handleShowPassword={handleShowPassword} />\n//                     {isSignUp && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\n//                 </Grid>\n//                 <Button type=\"submit\" fullwidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n//                     {isSignUp ? \"Sign Up\": \"Sign In\"}\n//                 </Button>\n//                 <GoogleLogin \n//                     clientId='388455900872-nl9ns44ali77v4c86p1qlt0qnf0fbfr5.apps.googleusercontent.com'\n//                     render={(renderProps) => (\n//                         <Button \n//                               className={classes.googleButton}\n//                               color='primary'\n//                               fullwidth onClick={renderProps.onClick} \n//                               display={renderProps.disabled}\n//                               startIcon = {<Icon />}  \n//                               variant='contained'>\n//                             Google Sign In\n//                         </Button>\n//                     )}\n//                     onSuccess={googleSuccess}\n//                     onFailure={googleFailure}\n//                     cookiePolicy='single_host_origin'\n//                  />\n//                 <Grid container justify='flex-end'>\n//                     <Grid item>\n//                         <Button onClick={switchMode}>\n//                             {isSignUp?'Already have an account? Sign In':\"Don't have an account? Sign Up\"}\n//                         </Button>\n//                     </Grid>\n//                 </Grid>\n//             </form>\n//         </Paper>\n//     </Container>\n//   )\n// }\n// export default Auth;","map":{"version":3,"sources":["/Users/TARIQ/Desktop/e_commerce/src/components/Auth/Auth.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { Avatar, Container, Grid, Paper, Button, Typography } from '@material-ui/core';\n// import  LockOutlinedIcon  from '@material-ui/icons/LockOutlined';\n// import React, { useState } from 'react';\n// import Input from './Input';\n// import { GoogleLogin } from 'react-google-login';\n// import Icon from './Icon';\n// import { useDispatch } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\n\n\n// import useStyles from \"./styles\";\n\n// const Auth = () => {\n//     const classes = useStyles();\n//     const [isSignUp,setIsSignUp] = useState(false);\n//     const [showPassword, setShowPassword] = useState(false);\n//     const dispatch = useDispatch();\n//     const [formData,setFormData] = useState({\n//         firtname:'',\n//         lastname:'',\n//         email:'',\n//         password:'',\n//         confirmPassword:'',\n//     });\n//     const history = useNavigate();\n\n//     const handleSubmit = (event)=>{\n//         event.preventDefault();\n//     }\n//     const handleChange = (event)=>{\n//         setFormData({ ...formData, [event.target.name]: event.target.value })\n//     }\n//     const handleShowPassword = ()=> setShowPassword((prevShowPassword) => !prevShowPassword);\n\n//     const switchMode = () =>{\n//         setIsSignUp((prevIsSignUp)=>!prevIsSignUp);\n//         handleShowPassword(false);\n//     }\n\n//     const googleSuccess = async (res) =>{\n//         const result = res?.profileObj; // cannot get property profileObj of undefined\n//         const token = res?.tokenId;\n\n//         try {\n//             dispatch({type:'AUTH', data:{result,token}});\n//             history('/');\n//         } catch (error) {\n//             console.log(error);\n//         }\n//     }\n\n//     const googleFailure = (error) =>{\n//         console.log(error);\n//         console.log('Google sign In was unsuccessgful. Try again later');\n//     }\n\n//   return (\n//     <Container component=\"main\" maxWidht=\"xs\">\n//         <Paper className={classes.Paper} elevation={3}>\n//             <Avatar className={classes.Avatar}>\n//                 <LockOutlinedIcon color='secondary' />\n//             </Avatar>\n//             <Typography variant='h5'>{isSignUp?'Sign Up':'Sign In'}</Typography>\n//             <form className={classes.form} onSubmit={handleSubmit}>\n//                 <Grid container spacing={2} >\n//                     {isSignUp && (\n//                         <>\n//                             <Input name=\"firstname\" label=\"First Name\" autoFocus handleChange={handleChange} half />\n//                             <Input name=\"lastname\" label=\"Last Name\" handleChange={handleChange} half />\n                            \n//                         </>\n//                     )}\n//                     <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n//                     <Input name=\"password\" label=\"password\" handleChange={handleChange} type={showPassword?\"text\":\"password\"} handleShowPassword={handleShowPassword} />\n//                     {isSignUp && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\n//                 </Grid>\n                \n//                 <Button type=\"submit\" fullwidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n//                     {isSignUp ? \"Sign Up\": \"Sign In\"}\n//                 </Button>\n\n//                 <GoogleLogin \n//                     clientId='388455900872-nl9ns44ali77v4c86p1qlt0qnf0fbfr5.apps.googleusercontent.com'\n//                     render={(renderProps) => (\n//                         <Button \n//                               className={classes.googleButton}\n//                               color='primary'\n//                               fullwidth onClick={renderProps.onClick} \n//                               display={renderProps.disabled}\n//                               startIcon = {<Icon />}  \n//                               variant='contained'>\n//                             Google Sign In\n//                         </Button>\n//                     )}\n//                     onSuccess={googleSuccess}\n//                     onFailure={googleFailure}\n//                     cookiePolicy='single_host_origin'\n//                  />\n//                 <Grid container justify='flex-end'>\n//                     <Grid item>\n//                         <Button onClick={switchMode}>\n//                             {isSignUp?'Already have an account? Sign In':\"Don't have an account? Sign Up\"}\n//                         </Button>\n//                     </Grid>\n//                 </Grid>\n//             </form>\n//         </Paper>\n//     </Container>\n//   )\n// }\n\n// export default Auth;"]},"metadata":{},"sourceType":"module"}