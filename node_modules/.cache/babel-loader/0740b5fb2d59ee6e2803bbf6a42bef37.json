{"ast":null,"code":"var _jsxFileName = \"/Users/TARIQ/Desktop/e_commerce/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Container, Grid, Paper, Button, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport React, { useState } from 'react';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './Icon';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    firtname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const history = useNavigate();\n\n  const handleSubmit = event => {};\n\n  const handleChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignUp(prevIsSignUp => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj; // cannot get property profileObj of undefined\n\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log('Google sign In was unsuccessgful. Try again later');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidht: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.Paper,\n      elevation: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"cL+nEUfIdcSUMJKMKKqpbjQK7hE=\", false, function () {\n  return [useStyles, useDispatch, useNavigate];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/TARIQ/Desktop/e_commerce/src/components/Auth/Auth.js"],"names":["Avatar","Container","Grid","Paper","Button","Typography","LockOutlinedIcon","React","useState","Input","GoogleLogin","Icon","useDispatch","useNavigate","useStyles","Auth","classes","isSignUp","setIsSignUp","showPassword","setShowPassword","dispatch","formData","setFormData","firtname","lastname","email","password","confirmPassword","history","handleSubmit","event","handleChange","target","name","value","handleShowPassword","prevShowPassword","switchMode","prevIsSignUp","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","console","log","googleFailure"],"mappings":"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","sourcesContent":["import { Avatar, Container, Grid, Paper, Button, Typography } from '@material-ui/core';\nimport  LockOutlinedIcon  from '@material-ui/icons/LockOutlined';\nimport React, { useState } from 'react';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './Icon';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nimport useStyles from \"./styles\";\n\nconst Auth = () => {\n    const classes = useStyles();\n    const [isSignUp,setIsSignUp] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const dispatch = useDispatch();\n    const [formData,setFormData] = useState({\n        firtname:'',\n        lastname:'',\n        email:'',\n        password:'',\n        confirmPassword:'',\n    });\n    const history = useNavigate();\n\n    const handleSubmit = (event)=>{\n        \n    }\n    const handleChange = (event)=>{\n        setFormData({ ...formData, [event.target.name]: event.target.value })\n    }\n    const handleShowPassword = ()=> setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const switchMode = () =>{\n        setIsSignUp((prevIsSignUp)=>!prevIsSignUp);\n        handleShowPassword(false);\n    }\n\n    const googleSuccess = async (res) =>{\n        const result = res?.profileObj; // cannot get property profileObj of undefined\n        const token = res?.tokenId;\n\n        try {\n            dispatch({type:'AUTH', data:{result,token}});\n            history('/');\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const googleFailure = (error) =>{\n        console.log(error);\n        console.log('Google sign In was unsuccessgful. Try again later');\n    }\n\n  return (\n    <Container component=\"main\" maxWidht=\"xs\">\n        <Paper className={classes.Paper} elevation={3}>\n            {/* <Avatar className={classes.Avatar}>\n                <LockOutlinedIcon color='secondary' />\n            </Avatar>\n            <Typography variant='h5'>{isSignUp?'Sign Up':'Sign In'}</Typography>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2} >\n                    {isSignUp && (\n                        <>\n                            <Input name=\"firstname\" label=\"First Name\" autoFocus handleChange={handleChange} half />\n                            <Input name=\"lastname\" label=\"Last Name\" handleChange={handleChange} half />\n                            \n                        </>\n                    )}\n                    <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                    <Input name=\"password\" label=\"password\" handleChange={handleChange} type={showPassword?\"text\":\"password\"} handleShowPassword={handleShowPassword} />\n                    {isSignUp && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\n                </Grid>\n                \n                <Button type=\"submit\" fullwidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                    {isSignUp ? \"Sign Up\": \"Sign In\"}\n                </Button>\n\n                <GoogleLogin \n                    clientId='388455900872-nl9ns44ali77v4c86p1qlt0qnf0fbfr5.apps.googleusercontent.com'\n                    render={(renderProps) => (\n                        <Button \n                              className={classes.googleButton}\n                              color='primary'\n                              fullwidth onClick={renderProps.onClick} \n                              display={renderProps.disabled}\n                              startIcon = {<Icon />}  \n                              variant='contained'>\n                            Google Sign In\n                        </Button>\n                    )}\n                    onSuccess={googleSuccess}\n                    onFailure={googleFailure}\n                    cookiePolicy='single_host_origin'\n                 />\n                <Grid container justify='flex-end'>\n                    <Grid item>\n                        <Button onClick={switchMode}>\n                            {isSignUp?'Already have an account? Sign In':\"Don't have an account? Sign Up\"}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form> */}\n        </Paper>\n\n    </Container>\n  )\n};\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}